- name: Install base software on all inventory
  hosts: all
  gather_facts: yes
  become: yes
  tasks:
    - name: Update hosts
      lineinfile:
        path: "/etc/hosts"
        regexp: ".*\t{{ hostvars[item]['ansible_hostname']}}\t{{ hostvars[item]['ansible_hostname']}}"
        line: "{{ hostvars[item]['ansible_ssh_host'] }}\t{{ hostvars[item]['ansible_hostname']}}\t{{ hostvars[item]['ansible_hostname']}}"
        state: present
        backup: yes
      with_items: "{{ ansible_play_batch }}"
    - name: AdoptOpenJDK yum repository
      yum_repository:
        name: AdoptOpenJDK
        description: AdoptOpenJDK
        baseurl: http://adoptopenjdk.jfrog.io/adoptopenjdk/rpm/centos/$releasever/$basearch
        enabled: yes
        gpgcheck: yes
        gpgkey: https://adoptopenjdk.jfrog.io/adoptopenjdk/api/gpg/key/public
    - name: Install fontconfig, AdoptOpenJDK and git
      yum:
        name:
          - fontconfig
          - adoptopenjdk-11-hotspot
          - git
        state: latest
- name: Jenkins installation
  hosts: jenkins_controller
  become: yes
  tasks:
    - name: Enable and start firewalld service
      systemd:
        name: firewalld
        state: started
        enabled: yes
    - name: Permit traffic in default zone on port 8080/tcp
      ansible.posix.firewalld:
        port: 8080/tcp
        permanent: yes
        state: enabled
        immediate: yes
    - name: Add jenkins yum repository
      yum_repository:
        name: jenkins
        description: Jenkins-stable
        baseurl: https://pkg.jenkins.io/redhat-stable/
        enabled: yes
        gpgcheck: yes
        gpgkey: https://pkg.jenkins.io/redhat-stable/jenkins.io.key
    - name: Install jenkins
      yum:
        name:
          - jenkins-2.277.4
        state: latest
    - name: Create directory for jenkins
      file:
        path: '{{ item }}'
        state: directory
        owner: jenkins
        group: jenkins
        recurse: yes
      with_items:
        - '/var/cache/jenkins/tmp'
        - '/var/cache/jenkins/heapdumps'
    - name: Update JENKINS_JAVA_OPTIONS
      lineinfile:
        path: '/etc/sysconfig/jenkins'
        regexp: '.*-Djava.awt.headless=true.*'
        line: 'JENKINS_JAVA_OPTIONS="-Djava.awt.headless=true -Djava.io.tmpdir=/var/cache/jenkins/tmp -Dorg.apache.commons.jelly.tags.fmt.timeZone=Asia/Jakarta -Duser.timezone=Asia/Jakarta"'
        state: present
    - name: Update JENKINS_ARGS
      lineinfile:
        path: '/etc/sysconfig/jenkins'
        regexp: '.*JENKINS_ARGS=.*'
        line: 'JENKINS_ARGS="--pluginroot=/var/cache/jenkins/plugins"'
        state: present
    - name: Create limits file
      copy:
        dest: '/etc/security/limits.d/30-jenkins.conf'
        src: '30-jenkins.conf'
    - name: Start jenkins service
      systemd:
        name: jenkins
        state: started
- name: Agent installation
  hosts: agents
  become: yes
  tasks:
    - name: Enable and start firewalld service
      systemd:
        name: firewalld
        state: started
        enabled: yes
    - name: Permit traffic in default zone on port 22/tcp
      ansible.posix.firewalld:
        port: 22/tcp
        permanent: yes
        state: enabled
        immediate: yes
    - name: Install python2-dnf
      yum:
        name: python2-dnf
        state: latest
    - name: Remove any installed docker
      dnf:
        name:
          - docker
          - docker-client
          - docker-client-latest
          - docker-common
          - docker-latest
          - docker-latest-logrotate
          - docker-logrotate
          - docker-engine
        state: absent
    - name: Add docker community edition stable repository
      yum_repository:
        name: docker-ce-stable
        description: Docker CE Stable - $basearch
        baseurl: https://download.docker.com/linux/centos/8/$basearch/stable
        enabled: yes
        gpgcheck: yes
        gpgkey: https://download.docker.com/linux/centos/gpg
    - name: Install docker and unzip
      dnf:
        name:
          - docker-ce
          - unzip
        state: latest
    - name: Add docker group
      group:
        name: docker
        state: present
    - name: Add $USER to docker group
      user:
        name: '{{ ansible_user }}'
        groups: docker
        append: yes
    - name: Do a ssh reset in order to reflect the $USER group changes
      meta: reset_connection
    - name: Start docker service
      systemd:
        name: docker
        state: started
    - name: Create maven directory
      file:
        path: '/opt/tools/maven'
        state: directory
        owner: vagrant
        group: vagrant
        recurse: yes
    - name: Download maven 3.6.3
      unarchive:
        src: https://mirrors.sonic.net/apache/maven/maven-3/3.6.3/binaries/apache-maven-3.6.3-bin.tar.gz
        dest: /opt/tools/maven
        remote_src: yes
    - name: Create maven latest symlink
      file:
        src: /opt/tools/maven/apache-maven-3.6.3
        dest: /opt/tools/maven/latest
        owner: vagrant
        group: vagrant
        state: link
    - name: Setup maven profile
      copy:
        dest: /etc/profile.d/maven.sh
        content: 'PATH=/opt/tools/maven/latest/bin:$PATH'
    - name: Create gradle directory
      file:
        path: /opt/tools/gradle
        state: directory
        owner: vagrant
        group: vagrant
        recurse: yes
    - name: Download gradle 7.1
      unarchive:
        src: https://services.gradle.org/distributions/gradle-7.1.1-bin.zip
        dest: /opt/tools/gradle
        remote_src: yes
    - name: Create gradle latest symlink
      file: 
        src: /opt/tools/gradle/gradle-7.1.1
        dest: /opt/tools/gradle/latest
        owner: vagrant
        group: vagrant
        state: link
    - name: Setup gradle profile
      copy:
        dest: /etc/profile.d/gradle.sh
        content: 'PATH=/opt/tools/gradle/latest/bin:$PATH'
    - name: Set final ownership to /opt/tools
      file:
        path: /opt/tools
        state: directory
        owner: vagrant
        group: vagrant
        recurse: yes